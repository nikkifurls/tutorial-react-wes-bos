{"version":3,"sources":["helpers.js","components/StorePicker.js","components/Header.js","components/Order.js","components/AddFishForm.js","components/EditFishForm.js","components/Login.js","base.js","components/Inventory.js","sample-fishes.js","components/Fish.js","components/App.js","components/NotFound.js","components/Router.js","index.js"],"names":["formatPrice","cents","toLocaleString","style","currency","rando","arr","Math","floor","random","length","getFunName","adjectives","StorePicker","myInput","React","createRef","goToStore","event","preventDefault","storeName","current","value","props","history","push","className","onSubmit","this","type","ref","required","placeholder","defaultValue","Component","Header","tagline","Order","renderOrder","key","fish","fishes","count","order","isAvailable","status","transitionOptions","classNames","timeout","enter","exit","component","name","price","onClick","removeFromOrder","orderIds","Object","keys","total","reduce","prevTotal","map","AddFishForm","nameRef","priceRef","statusRef","descRef","imageRef","createFish","parseFloat","desc","image","addFish","currentTarget","reset","EditFishForm","handleChange","updatedFish","updateFish","index","onChange","deleteFish","Login","authenticate","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","base","Rebase","createClass","database","Inventory","state","uid","onwer","authHandler","authData","a","fetch","storeId","context","store","owner","post","data","user","setState","provider","authProvider","auth","signInWithPopup","then","logout","signOut","onAuthStateChanged","loadSampleFishes","fish1","fish2","fish3","fish4","fish5","fish6","fish7","fish8","fish9","Fish","details","src","alt","disabled","addToOrder","App","Date","now","sampleFishes","params","match","localStorageRef","localStorage","getItem","JSON","parse","syncState","setItem","stringify","removeBinding","NotFound","Router","BrowserRouter","Switch","Route","exact","path","render","document","querySelector"],"mappings":"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","file":"static/js/main.9efeb1dd.chunk.js","sourcesContent":["export function formatPrice(cents) {\n  return (cents / 100).toLocaleString(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\"\n  });\n}\n\nexport function rando(arr) {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\n\nexport function slugify(text) {\n  return text\n    .toString()\n    .toLowerCase()\n    .replace(/\\s+/g, \"-\")\n    .replace(/[^\\w-]+/g, \"\")\n    .replace(/--+/g, \"-\")\n    .replace(/^-+/, \"\")\n    .replace(/-+$/, \"\");\n}\n\nexport function getFunName() {\n  const adjectives = [\n    \"adorable\",\n    \"beautiful\",\n    \"clean\",\n    \"drab\",\n    \"elegant\",\n    \"fancy\",\n    \"glamorous\",\n    \"handsome\",\n    \"long\",\n    \"magnificent\",\n    \"old-fashioned\",\n    \"plain\",\n    \"quaint\",\n    \"sparkling\",\n    \"ugliest\",\n    \"unsightly\",\n    \"angry\",\n    \"bewildered\",\n    \"clumsy\",\n    \"defeated\",\n    \"embarrassed\",\n    \"fierce\",\n    \"grumpy\",\n    \"helpless\",\n    \"itchy\",\n    \"jealous\",\n    \"lazy\",\n    \"mysterious\",\n    \"nervous\",\n    \"obnoxious\",\n    \"panicky\",\n    \"repulsive\",\n    \"scary\",\n    \"thoughtless\",\n    \"uptight\",\n    \"worried\"\n  ];\n\n  const nouns = [\n    \"women\",\n    \"men\",\n    \"children\",\n    \"teeth\",\n    \"feet\",\n    \"people\",\n    \"leaves\",\n    \"mice\",\n    \"geese\",\n    \"halves\",\n    \"knives\",\n    \"wives\",\n    \"lives\",\n    \"elves\",\n    \"loaves\",\n    \"potatoes\",\n    \"tomatoes\",\n    \"cacti\",\n    \"foci\",\n    \"fungi\",\n    \"nuclei\",\n    \"syllabuses\",\n    \"analyses\",\n    \"diagnoses\",\n    \"oases\",\n    \"theses\",\n    \"crises\",\n    \"phenomena\",\n    \"criteria\",\n    \"data\"\n  ];\n\n  return `${rando(adjectives)}-${rando(adjectives)}-${rando(nouns)}`;\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { getFunName } from \"../helpers\";\n\nclass StorePicker extends React.Component {\n\n  // Set component properties\n  myInput = React.createRef();\n\n  static propTypes = {\n    history: PropTypes.object\n  }\n\n  goToStore = event => {\n    // 1. Stop the form from submitting\n    event.preventDefault();\n\n    // 2. Get the text from the input\n    const storeName = this.myInput.current.value;\n\n    // 3. Change the page to /store/whatever-they-entered\n    this.props.history.push(`/store/${storeName}`);\n  }\n\n  render() {\n    return (\n      <form className=\"store-selector\" onSubmit={this.goToStore}>\n        <h2>Please Enter a Store</h2>\n        <input\n          type=\"text\"\n          ref={this.myInput}\n          required\n          placeholder=\"Store Name\"\n          defaultValue={getFunName()}\n        />\n        <button type=\"submit\">Visit Store</button>\n      </form>\n    );\n  }\n}\n\nexport default StorePicker;","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// Stateless functional component\nconst Header = props => (\n  <header className=\"top\">\n    <h1>\n      Catch\n      <span className=\"ofThe\">\n        <span className=\"of\">of</span>\n        <span className=\"the\">the</span>\n      </span>\n      Day\n    </h1>\n    <h3 className=\"tagline\">\n      <span>{props.tagline}</span>\n    </h3>\n  </header>\n);\n\nHeader.propTypes = {\n  tagline: PropTypes.string.isRequired\n};\n\nexport default Header;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { formatPrice } from '../helpers';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\n\nclass Order extends React.Component {\n\n  static propTypes = {\n    fishes: PropTypes.object,\n    order: PropTypes.object,\n    removeFromOrder: PropTypes.func\n  }\n  \n  renderOrder = key => {\n    const fish = this.props.fishes[key];\n    const count = this.props.order[key];\n    const isAvailable = fish && fish.status === 'available';\n    const transitionOptions = {\n      classNames: \"order\",\n      key,\n      timeout: { enter: 500, exit: 500 }\n    };\n\n    // Make sure fish is loaded\n    if (!fish) return null;\n\n    if (!isAvailable) {\n      return (\n        <CSSTransition {...transitionOptions}>\n          <li key={key}>\n            Sorry {fish ? fish.name : 'fish'} is no longer available\n            <button onClick={() => this.props.removeFromOrder(key)}>Remove X</button>\n          </li>\n        </CSSTransition>\n      )\n    }\n    \n    return (\n      <CSSTransition {...transitionOptions}>\n        <li key={key}>\n          <span>\n            <TransitionGroup component=\"span\" className=\"count\">\n              <CSSTransition classNames=\"count\" key={count} timeout={{enter: 5000, exit: 5000 }}>\n                <span>{count}</span>\n              </CSSTransition>\n            </TransitionGroup>\n            lbs {fish.name}\n            {formatPrice(count * fish.price)}\n            <button onClick={() => this.props.removeFromOrder(key)}>&times;</button>\n          </span>\n        </li>\n      </CSSTransition>\n    )\n  }\n\n  render() {\n    const orderIds = Object.keys(this.props.order);\n    const total = orderIds.reduce((prevTotal, key) => {\n      const fish = this.props.fishes[key];\n      const count = this.props.order[key];\n      const isAvailable = fish && fish.status === 'available';\n      if (isAvailable) {\n        return prevTotal + (count * fish.price);\n      }\n      return prevTotal;\n    }, 0);\n\n    return (\n      <div className=\"order-wrap\">\n        <h2>Order</h2>\n        <TransitionGroup component=\"ul\" className=\"order\">\n          {orderIds.map(this.renderOrder)}\n        </TransitionGroup>\n        <div className=\"total\"><strong>{formatPrice(total)}</strong></div>\n      </div>\n    );\n  }\n}\n\nexport default Order;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass AddFishForm extends React.Component {\n  nameRef = React.createRef();\n  priceRef = React.createRef();\n  statusRef = React.createRef();\n  descRef = React.createRef();\n  imageRef = React.createRef();\n\n  static propTypes = {\n    addFish: PropTypes.func\n  }\n\n  createFish = event => {\n    // 1. Stop the form from submitting\n    event.preventDefault();\n\n    // 2. Create fish\n    const fish = {\n      name: this.nameRef.current.value,\n      price: parseFloat(this.priceRef.current.value),\n      status: this.statusRef.current.value,\n      desc: this.descRef.current.value,\n      image: this.imageRef.current.value,\n    }\n\n    this.props.addFish(fish);\n\n    // 3. Refresh form\n    event.currentTarget.reset();\n  }\n\n  render() {\n    return (\n      <form className=\"fish-edit\" onSubmit={this.createFish}>\n        <input name=\"name\" ref={this.nameRef} type=\"text\" placeholder=\"Name\" />\n        <input name=\"price\" ref={this.priceRef} type=\"text\" placeholder=\"Price\" />\n        <select name=\"status\" ref={this.statusRef} >\n          <option value=\"available\">Fresh</option>\n          <option value=\"unavailable\">Sold Out</option>\n        </select>\n        <textarea name=\"desc\" ref={this.descRef} placeholder=\"Desc\"></textarea>\n        <input name=\"name\" type=\"text\" ref={this.imageRef} placeholder=\"Image\" />\n        <button type=\"submit\">+ Add Fish</button>\n      </form>\n    );\n  }\n}\n\nexport default AddFishForm;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass EditFishForm extends React.Component {\n\n  static propTypes = {\n    fish: PropTypes.shape({\n      image: PropTypes.string,\n      name: PropTypes.string,\n      desc: PropTypes.string,\n      status: PropTypes.string,\n      price: PropTypes.number\n    }),\n    index: PropTypes.string,\n    updateFish: PropTypes.func\n  }\n\n  handleChange = event => {\n    // Update fish\n    // 1. Copy current fish\n    const updatedFish = {\n      ...this.props.fish,\n      [event.currentTarget.name]: event.currentTarget.value\n    }\n    this.props.updateFish(this.props.index, updatedFish);\n  };\n\n  render() {\n    return (\n      <div className=\"fish-edit\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          onChange={this.handleChange}\n          value={this.props.fish.name}\n        />\n        <input\n          type=\"text\"\n          name=\"price\"\n          onChange={this.handleChange}\n          value={this.props.fish.price}\n        />\n        <select\n          name=\"status\"\n          onChange={this.handleChange}\n          value={this.props.fish.status}>\n            <option value=\"available\">Fresh!</option>\n            <option value=\"unavailable\">Sold Out!</option>\n        </select>\n        <textarea\n          name=\"desc\"\n          onChange={this.handleChange}\n          value={this.props.fish.desc}></textarea>\n        <input\n          type=\"text\"\n          name=\"image\"\n          onChange={this.handleChange}\n          value={this.props.fish.image} />\n        <button onClick={() => this.props.deleteFish(this.props.index)}>Remove Fish</button>\n      </div>\n    );\n  }\n}\n\nexport default EditFishForm;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Login = props => (\n  <nav className=\"login\">\n    <h2>Inventory Login</h2>\n    <p>Sign in to manage your store's inventory.</p>\n    <button\n      className=\"facebook\"\n      onClick={() => props.authenticate('Facebook')}\n    >\n      Log in with Facebook\n    </button>\n  </nav>\n);\n\nLogin.propTypes = {\n  authenticate: PropTypes.func.isRequired\n}\n\nexport default Login;","import Rebase from 're-base';\nimport firebase from 'firebase';\n\nconst firebaseApp = firebase.initializeApp({\n  apiKey: \"AIzaSyCj1JLw3V4IFl0WumX9HKT1yG6iBh_mCB4\",\n  authDomain: \"nicole-catch-of-the-day.firebaseapp.com\",\n  databaseURL: \"https://nicole-catch-of-the-day-default-rtdb.firebaseio.com\",\n  // measurementId: \"G-VYXTX1X678\"\n});\n\n// Rebase bindings\nconst base = Rebase.createClass(firebaseApp.database());\n\n// Named export\nexport { firebaseApp };\n\n// Default export\nexport default base;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport AddFishForm from './AddFishForm';\nimport EditFishForm from './EditFishForm';\nimport Login from './Login';\nimport base, { firebaseApp } from '../base';\nimport firebase from 'firebase';\n\nclass Inventory extends React.Component {\n\n  static propTypes = {\n    storeId: PropTypes.string,\n    fishes: PropTypes.object,\n    updateFish: PropTypes.func,\n    deleteFish: PropTypes.func,\n    loadSampleFishes: PropTypes.func,\n  };\n\n  state = {\n    uid: null,\n    onwer: null\n  };\n\n  componentDidMount() {\n    firebase.auth().onAuthStateChanged(user => {\n      if (user) {\n        this.authHandler({ user });\n      }\n    })\n  }\n\n  authHandler = async authData => {\n    // 1. Look up current store in Firebase database\n    const store = await base.fetch(this.props.storeId, { context: this });\n\n    // 2. Claim it if there is no owner\n    if (!store.owner) {\n      // Save it as our own\n      await base.post(`${this.props.storeId}/owner`, {\n        data: authData.user.uid\n      })\n    }\n\n    // 3. Set state of inventory component to reflect current user\n    this.setState({\n      uid: authData.user.uid,\n      owner: store.owner || authData.user.uid,\n    });\n  };\n\n  authenticate = provider => {\n    // Auth provider for FB\n    const authProvider = new firebase.auth[`${provider}AuthProvider`]();\n    firebaseApp.auth().signInWithPopup(authProvider).then(this.authHandler);\n  }\n\n  logout = async () => {\n    await firebase.auth().signOut();\n    this.setState({ uid: null });\n  }\n\n  render() {\n    const logout = <button onClick={this.logout}>Log out</button>;\n\n    // 1. Check if logged in\n    if (!this.state.uid) {\n      return <Login authenticate={this.authenticate} />;\n    }\n\n    // 2. Check if not owner\n    if (this.state.uid !== this.state.owner) {\n       return (\n         <div>\n           <p>Sorry, you are not the owner!</p>\n           {logout}\n         </div>\n       );\n    }\n\n    // 3. Render inventory\n    return (\n      <div className=\"inventory\">\n        <h2>Inventory</h2>\n        {logout}\n        {Object.keys(this.props.fishes).map(key => (\n          <EditFishForm\n            key={key}\n            index={key}\n            fish={this.props.fishes[key]}\n            updateFish={this.props.updateFish}\n            deleteFish={this.props.deleteFish}\n          />\n        ))}\n        <AddFishForm\n          addFish={this.props.addFish}\n        />\n        <button onClick={this.props.loadSampleFishes}>Load Sample Fishes</button>\n      </div>\n    );\n  }\n}\n\nexport default Inventory;","// This is just some sample data so you don't have to think of your own!\nconst fishes = {\n  fish1: {\n    name: \"Pacific Halibut\",\n    image: \"/images/hali.jpg\",\n    desc:\n      \"Everyone’s favorite white fish. We will cut it to the size you need and ship it.\",\n    price: 1724,\n    status: \"available\"\n  },\n\n  fish2: {\n    name: \"Lobster\",\n    image: \"/images/lobster.jpg\",\n    desc:\n      \"These tender, mouth-watering beauties are a fantastic hit at any dinner party.\",\n    price: 3200,\n    status: \"available\"\n  },\n\n  fish3: {\n    name: \"Sea Scallops\",\n    image: \"/images/scallops.jpg\",\n    desc:\n      \"Big, sweet and tender. True dry-pack scallops from the icey waters of Alaska. About 8-10 per pound\",\n    price: 1684,\n    status: \"unavailable\"\n  },\n\n  fish4: {\n    name: \"Mahi Mahi\",\n    image: \"/images/mahi.jpg\",\n    desc:\n      \"Lean flesh with a mild, sweet flavor profile, moderately firm texture and large, moist flakes. \",\n    price: 1129,\n    status: \"available\"\n  },\n\n  fish5: {\n    name: \"King Crab\",\n    image: \"/images/crab.jpg\",\n    desc:\n      \"Crack these open and enjoy them plain or with one of our cocktail sauces\",\n    price: 4234,\n    status: \"available\"\n  },\n\n  fish6: {\n    name: \"Atlantic Salmon\",\n    image: \"/images/salmon.jpg\",\n    desc:\n      \"This flaky, oily salmon is truly the king of the sea. Bake it, grill it, broil it...as good as it gets!\",\n    price: 1453,\n    status: \"available\"\n  },\n\n  fish7: {\n    name: \"Oysters\",\n    image: \"/images/oysters.jpg\",\n    desc: \"A soft plump oyster with a sweet salty flavor and a clean finish.\",\n    price: 2543,\n    status: \"available\"\n  },\n\n  fish8: {\n    name: \"Mussels\",\n    image: \"/images/mussels.jpg\",\n    desc:\n      \"The best mussels from the Pacific Northwest with a full-flavored and complex taste.\",\n    price: 425,\n    status: \"available\"\n  },\n\n  fish9: {\n    name: \"Jumbo Prawns\",\n    image: \"/images/prawns.jpg\",\n    desc:\n      \"With 21-25 two bite prawns in each pound, these sweet morsels are perfect for shish-kabobs.\",\n    price: 2250,\n    status: \"available\"\n  }\n};\n\nexport default fishes;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { formatPrice } from '../helpers';\n\nclass Fish extends React.Component {\n\n  static propTypes = {\n    index: PropTypes.string,\n    details: PropTypes.shape({\n      image: PropTypes.string,\n      name: PropTypes.string,\n      desc: PropTypes.string,\n      status: PropTypes.string,\n      price: PropTypes.number\n    }),\n    addToOrder: PropTypes.func\n  }\n\n  render() {\n    const { image, name, price, desc, status } = this.props.details;\n    const isAvailable = status === 'available';\n\n    return (\n      <li className=\"menu-fish\">\n        <img src={image} alt={name} />\n        <h3 className=\"fish-name\">\n          {name}\n          <span className=\"price\">{formatPrice(price)}</span>\n        </h3>\n        <p>{desc}</p>\n        <button disabled={!isAvailable} onClick={() => this.props.addToOrder(this.props.index)}>\n          {isAvailable ? 'Add To Cart' : 'Sold Out'}\n        </button>\n      </li>\n    );\n  }\n}\n\nexport default Fish;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Header from './Header';\nimport Order from './Order';\nimport Inventory from './Inventory';\nimport sampleFishes from \"../sample-fishes\";\nimport Fish from './Fish';\nimport base from '../base';\n\n// Order: state, lifecycle events, custom stuff, render\nclass App extends React.Component {\n  // State\n\n  // State property\n  state = {\n    fishes: {},\n    order: {}\n  };\n\n  static propTypes = {\n    match: PropTypes.object\n    // match: this.propTypes.object\n  }\n\n  componentDidMount() {\n    const { params } = this.props.match;\n\n    // 1. Reinstate localStorage\n    const localStorageRef = localStorage.getItem(params.storeId);\n    if (localStorageRef) {\n      this.setState({ order: JSON.parse(localStorageRef) });\n    }\n\n    // In Firebase, refs are references to data\n    this.ref = base.syncState(`${params.storeId}/fishes`, {\n      context: this,\n      state: 'fishes'\n    });\n  }\n\n  componentDidUpdate() {\n    localStorage.setItem(this.props.match.params.storeId, JSON.stringify(this.state.order));\n  }\n\n  componentWillUnmount() {\n    base.removeBinding(this.ref);\n  }\n\n  // State functions - must live inside same component that state lives in\n\n  // Update state\n  addFish = fish => {\n    // 1. Copy existing state, never want to directly modify state (mutation)\n    const fishes = { ...this.state.fishes };\n\n    // 2. Add new fish to fishes variable\n    fishes[`fish${Date.now()}`] = fish;\n\n    // 3. Set the new fishes object to state\n    // this.setState({ fishes: fishes });\n    this.setState({ fishes });\n  };\n\n  updateFish = (key, updatedFish) => {\n    // 1. Copy current state\n    const fishes = { ...this.state.fishes };\n\n    // 2. Update state\n    fishes[key] = updatedFish;\n\n    // 3. Set that to state\n    this.setState({ fishes });\n  }\n\n  deleteFish = key => {\n    // 1. Copy current state\n    const fishes = { ...this.state.fishes };\n\n    // 2. Update state\n    fishes[key] = null;\n\n    // 3. Set that to state\n    this.setState({ fishes });\n  }\n\n  // Load sample data\n  loadSampleFishes = () => {\n    this.setState({ fishes: sampleFishes });\n  }\n\n  addToOrder = key => {\n    // 1. Copy existing state\n    const order = { ...this.state.order };\n\n    // 2. Either add to order or update number in order\n    order[key] = order[key] + 1 || 1;\n\n    // 3. Update state object\n    this.setState({ order });\n  }\n\n  removeFromOrder = key => {\n    // 1. Copy existing state\n    const order = { ...this.state.order };\n\n    // 2. Remove from order\n    delete order[key];\n\n    // 3. Update state object\n    this.setState({ order });\n  }\n\n  render() {  \n    return (\n      <div className=\"catch-of-the-day\">\n        <div className=\"menu\">\n          <Header tagline=\"Fresh Seafood Market\" />\n          <ul className=\"fishes\">\n            {Object.keys(this.state.fishes).map(key =>\n              <Fish\n                key={key}\n                index={key}\n                details={this.state.fishes[key]}\n                addToOrder={this.addToOrder}\n              />\n            )}\n          </ul>\n        </div>\n        <Order\n          fishes={this.state.fishes}\n          order={this.state.order}\n          removeFromOrder={this.removeFromOrder}\n        />\n        <Inventory\n          storeId={this.props.match.params.storeId}\n          fishes={this.state.fishes}\n          addFish={this.addFish}\n          updateFish={this.updateFish}\n          deleteFish={this.deleteFish}\n          loadSampleFishes={this.loadSampleFishes}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\n\nconst NotFound = () => (\n  <div>\n    <h2>Not Found</h2>\n  </div>\n);\n\nexport default NotFound;","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport StorePicker from './StorePicker';\nimport App from './App';\nimport NotFound from './NotFound';\n\nconst Router = () => (\n  <BrowserRouter>\n    <Switch>\n      <Route exact path=\"/\" component={StorePicker} />\n      <Route path=\"/store/:storeId\" component={App} />\n      <Route component={NotFound} />\n    </Switch>\n  </BrowserRouter>\n)\n\nexport default Router;","import React from 'react';\nimport { render } from 'react-dom';\nimport Router from './components/Router';\nimport \"./css/style.css\";\n\nrender(<Router />, document.querySelector('#main'));"],"sourceRoot":""}